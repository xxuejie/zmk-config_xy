/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
     &kp TAB  &kp Q  &kp W     &kp E      &kp R      &kp T          &kp Y       &kp U      &kp I    &kp O     &kp P     &kp BACKSPACE
&kp LEFT_WIN  &kp A  &kp S     &kp D      &kp F      &kp G          &kp H       &kp J      &kp K    &kp L  &kp SEMI         &kp ENTER
   &kp LSHFT  &kp Z  &kp X     &kp C      &kp V      &kp B          &kp N       &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp SINGLE_QUOTE
                            &sk LALT  &sk LCTRL  &lt 1 ESC    &lt 2 SPACE  &kp RSHIFT     &tog 3
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp HOME  &kp EXCL     &kp AT   &kp HASH          &kp DLLR       &kp PRCNT          &kp CARET           &kp AMPS    &kp ASTERISK      &kp LPAR       &kp RPAR     &trans
 &kp END    &kp N1     &kp N2     &kp N3            &kp N4          &kp N5       &kp NUMBER_6       &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0  &kp COLON
  &trans  &kp PIPE  &kp TILDE  &kp GRAVE  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET       &kp MINUS    &kp PERIOD  &kp BACKSLASH   &kp PLUS
                               &kp PG_UP         &kp PG_DN          &trans          &kp SPACE          &kp EQUAL  &kp UNDERSCORE
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
    &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5      &kp F6    &kp F7  &kp F8     &kp F9  &kp F10  &trans
    &trans    &kp C_PREV    &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP      &kp C_PP    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans    &trans  &trans     &trans   &trans  &trans
                                              &trans        &trans        &trans      &trans    &trans  &trans
            >;
        };

        layer_command {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
